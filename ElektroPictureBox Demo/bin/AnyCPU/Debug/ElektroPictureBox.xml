<?xml version="1.0"?>
<doc>
<assembly>
<name>
ElektroPictureBox
</name>
</assembly>
<members>
<member name="T:My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:ElektroKit.Interop.Win32.NativeMethods">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Platform Invocation methods (P/Invoke), access unmanaged code.
 <para></para>
 This class does not suppress stack walks for unmanaged code permission.
 <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute"/> must not be applied to this class.
 <para></para>
 This class is for methods that can be used anywhere because a stack walk will be performed.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/ms182161.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.Interop.Win32.NativeMethods.#ctor">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Prevents a default instance of the <see cref="T:ElektroKit.Interop.Win32.NativeMethods"/> class from being created.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.Interop.Win32.NativeMethods.SendMessage(System.IntPtr,ElektroKit.Interop.Win32.Enums.WindowMessages,System.IntPtr,System.Drawing.Point@)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sends the specified message to a edit-control (typically a <see cref="T:System.Windows.Forms.TextBox"/>).
 <para></para>
 The SendMessage function calls the window procedure for the specified window
 and does not return until the window procedure has processed the message.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms644950%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
 <param name="hwnd">
 A handle to the window whose window procedure will receive the message.
 </param>
 
 <param name="msg">
 The message to be sent.
 </param>
 
 <param name="wParam">
 Additional message-specific information.
 </param>
 
 <param name="lParam">
 Additional message-specific information.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 The return value specifies the result of the message processing; it depends on the message sent.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:ElektroKit.Interop.Win32.Enums.WindowMessages">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The system sends or posts a system-defined message when it communicates with an application. 
 <para></para>
 It uses these messages to control the operations of applications and to provide input and other information for applications to process. 
 <para></para>
 An application can also send or post system-defined messages.
 <para></para>
 Applications generally use these messages to control the operation of control windows created by using preregistered window classes.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms644927%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.Interop.Win32.Enums.WindowMessages.Null">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The <see cref="F:ElektroKit.Interop.Win32.Enums.WindowMessages.Null"/> message performs no operation.
 <para></para>
 An application sends the <see cref="F:ElektroKit.Interop.Win32.Enums.WindowMessages.Null"/> message if it wants to 
 send a message that the recipient window will ignore.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.Interop.Win32.Enums.WindowMessages.WM_MouseWheel">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The message is sent to the focus window when the mouse wheel is rotated.
 <para></para>
 The <c>DefWindowProc</c> function propagates the message to the window's parent. 
 <para></para>
 There should be no internal forwarding of the message since <c>DefWindowProc</c> propagates it up the 
 parent chain until it finds a window that processes it.
 <para></para>
 
 <c>wParam</c> 
 The high-order word indicates the distance the wheel is rotated, 
 expressed in multiples or divisions of WHEEL_DELTA, which is 120. 
 A positive value indicates that the wheel was rotated forward, away from the user; 
 a negative value indicates that the wheel was rotated backward, toward the user.
 <para></para>
 The low-order word indicates whether various virtual keys are down.
 <para></para>
 
 <c>lParam</c> 
 The low-order word specifies the x-coordinate of the pointer, relative to the upper-left corner of the screen.
 <para></para>
 The high-order word specifies the y-coordinate of the pointer, relative to the upper-left corner of the screen
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://docs.microsoft.com/en-us/windows/desktop/inputdev/wm-mousewheel"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:ElektroKit.Core.PercentageTypeConverter">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Provides a unified way of converting types of values to a percentage value.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <example> This is a code example.
 <code>
 &lt;TypeConverter(GetType(PercentageTypeConverter))&gt;
 &lt;Browsable(True)&gt;
 Public Property ImageZoom As Double
     Get
         Return Me.imageZoomB
     End Get
     Set(ByVal value As Double)
         If (value &lt; 0.0R) Then ' Avoid negative values.
             value = 0.0R
         End If
         If (value &gt; 2.0R) Then ' Limit image zoom to x2.0 ( translated as string: 200% )
             value = 2.0R
         End If
         Me.imageZoomB = value
     End Set
 End Property
 
 Private imageZoomB As Double = 1.0R ' Default zoom: x1.0 ( translated as string: 100% )
 </code>
 </example>
 ----------------------------------------------------------------------------------------------------
 <seealso cref="T:System.ComponentModel.TypeConverter"/>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.Core.PercentageTypeConverter.#ctor">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Initializes a new instance of the <see cref="T:ElektroKit.Core.PercentageTypeConverter"/> class.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.Core.PercentageTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Returns whether this converter can convert an object of the given type to the type of this converter, 
 using the specified context.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="context">
 An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.
 </param>
 
 <param name="sourceType">
 A <see cref="T:System.Type"/> that represents the type you want to convert from.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 <see langword="True"/> if this converter can perform the conversion; otherwise, <see langword="False"/>.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.Core.PercentageTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Converts the given object to the type of this converter, using the specified context and culture information.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="context">
 An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.
 </param>
 
 <param name="culture">
 The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.
 </param>
 
 <param name="value">
 The <see cref="T:System.Object"/> to convert.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 An <see cref="T:System.Object"/> that represents the converted value.
 </returns>
 ----------------------------------------------------------------------------------------------------
 <exception cref="T:System.FormatException">
 Valid Range is between 0% and 100%.
 </exception>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.Core.PercentageTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Returns whether this converter can convert the object to the specified type, using the specified context.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="context">
 An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.
 </param>
 
 <param name="destinationType">
 A <see cref="T:System.Type"/> that represents the type you want to convert to.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 <see langword="True"/> if this converter can perform the conversion; otherwise, <see langword="False"/>.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.Core.PercentageTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Converts the given value object to the specified type, using the specified context and culture information.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="context">
 An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.
 </param>
 
 <param name="culture">
 A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.
 </param>
 
 <param name="value">
 The <see cref="T:System.Object"/> to convert.
 </param>
 
 <param name="destinationType">
 The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 An <see cref="T:System.Object" /> that represents the converted value.
 </returns>
 ----------------------------------------------------------------------------------------------------
 <exception cref="T:System.ArgumentNullException">
 destinationType
 </exception>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:ElektroKit.UserControls.ElektroPictureBox">
 ----------------------------------------------------------------------------------------------------
 <summary>
 A extended <see cref="T:System.Windows.Forms.PictureBox"/> control.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox._HScrollBar">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The horizontal scroll bar.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox._VScrollBar">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The vertical scroll bar.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox.viewSize">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The view area size.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox.selectionStartPoint">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The start location of the selection rectangle.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox.isDrawingSelectionRect">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Keeps track of the selection rectangle drawing.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.TabIndex">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value that indicates the index in the TAB order that this control will occupy.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 A value that indicates the index in the TAB order that this control will occupy.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.TabStop">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value that indicates whether the user can give the focus to this control by using the TAB key.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 <see langword="True"/> if tabstop is enabled; <see langword="False"/> otherwise.
 </value>
 ----------------------------------------------------------------------------------------------------
 <PermissionSet>
   <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
   <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
   <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
   <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
 </PermissionSet>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.BackColor">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the background color for the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The background color for the control.
 </value>
 ----------------------------------------------------------------------------------------------------
 <PermissionSet>
   <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
 </PermissionSet>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.DefaultSize">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the default size of the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The default size of the control.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.Image">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the image displayed in the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The image displayed in the control.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox.imageB">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field )
 <para></para>
 The image displayed in the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.ImageDisplaySize">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the size of the image as it is shown in the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The size of the image as it is shown in the control.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.Zoom">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the zoom level of the image shown by the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The zoom level of the image shown by the control.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox.zoomB">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field )
 <para></para>
 The zoom level of the image shown by the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.CanvasSize">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the canvas size.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The canvas size.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.InterpolationMode">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the interpolation mode that determine the image quality.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The interpolation mode that determine the image quality.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.SelectionEnabled">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value that determine whether the user can select a portion of the image using the mouse.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 A value that determine whether the user can select a portion of the image using the mouse.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox.selectionEnabledB">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field )
 <para></para>
 A value that determine whether the user can select a portion of the image using the mouse.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.SelectionColor">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the color used to draw the selection rectangle.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The color used to draw the selection rectangle.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:ElektroKit.UserControls.ElektroPictureBox.SelectionRectangle">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the selection rectangle.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The selection rectangle.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:ElektroKit.UserControls.ElektroPictureBox.selectionRectangleB">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field )
 <para></para>
 The selection rectangle.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="E:ElektroKit.UserControls.ElektroPictureBox.Scroll">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Occurs when the user or code scrolls through the client area of the control.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="E:ElektroKit.UserControls.ElektroPictureBox.ImageChanged">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Occurs when the value of the <see cref="P:ElektroKit.UserControls.ElektroPictureBox.Image"/> property changes.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="E:ElektroKit.UserControls.ElektroPictureBox.ZoomChanged">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Occurs when the value of the <see cref="P:ElektroKit.UserControls.ElektroPictureBox.Zoom"/> property changes.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="E:ElektroKit.UserControls.ElektroPictureBox.SelectionClicked">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Occurs when the user clicks inside the selection rectangle.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.#ctor">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Initializes a new instance of the <see cref="T:ElektroKit.UserControls.ElektroPictureBox"/> class.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnScroll(System.Windows.Forms.ScrollEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:ElektroKit.UserControls.ElektroPictureBox.Scroll"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.ScrollEventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnImageChanged(System.EventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:ElektroKit.UserControls.ElektroPictureBox.ImageChanged"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.EventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnZoomChanged(System.EventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:ElektroKit.UserControls.ElektroPictureBox.ZoomChanged"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.EventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnSelectionClicked(System.Windows.Forms.MouseEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:ElektroKit.UserControls.ElektroPictureBox.SelectionClicked"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.PictureBox.LoadCompleted"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.ComponentModel.AsyncCompletedEventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnEnter(System.EventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.PictureBox.Enter"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 An <see cref="T:System.EventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnLeave(System.EventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.PictureBox.Leave"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 An <see cref="T:System.EventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.PictureBox.KeyDown"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnResize(System.EventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.Control.Resize"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.EventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="e">
 A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.HScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Handles the <see cref="E:System.Windows.Forms.ScrollBar.Scroll"/> event of the <see cref="P:ElektroKit.UserControls.ElektroPictureBox.HScrollBar"/> control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="sender">
 The source of the event.
 </param>
 
 <param name="e">
 The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> instance containing the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.VScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Handles the <see cref="E:System.Windows.Forms.ScrollBar.Scroll"/> event of the <see cref="P:ElektroKit.UserControls.ElektroPictureBox.VScrollBar"/> control.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="sender">
 The source of the event.
 </param>
 
 <param name="e">
 The <see cref="T:System.Windows.Forms.ScrollEventArgs"/> instance containing the event data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.PerformClick">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Generates a <see cref="E:System.Windows.Forms.Control.Click"/> event for this control.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.DisplayScrollbars">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Display the <see cref="P:ElektroKit.UserControls.ElektroPictureBox.HScrollBar"/> and <see cref="P:ElektroKit.UserControls.ElektroPictureBox.VScrollBar"/> controls.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.SetScrollbarValues">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the <see cref="P:ElektroKit.UserControls.ElektroPictureBox.HScrollBar"/> and <see cref="P:ElektroKit.UserControls.ElektroPictureBox.VScrollBar"/> values.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:ElektroKit.UserControls.ElektroPictureBox.Dispose(System.Boolean)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Releases unmanaged and optionally managed resources.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="disposing">
 true to release both managed and unmanaged resources; false to release only unmanaged resources.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
</members>
</doc>
